name: Deploy to AWS Lambda

on:
  push:
    branches:
      - main
      - prod-*

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-south-1

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Create a ECR repo
        shell: bash
        run: |
          aws ecr describe-repositories --repository-names ${{ github.event.repository.name }} || ( aws ecr create-repository --repository-name ${{ github.event.repository.name }}  && aws ecr put-lifecycle-policy --repository-name ${{ github.event.repository.name }} --lifecycle-policy-text "{\"rules\":[{\"rulePriority\":1,\"description\":\"Keep last 5 images\",\"selection\":{\"tagStatus\":\"any\",\"countType\":\"imageCountMoreThan\",\"countNumber\":5},\"action\":{\"type\":\"expire\"}}]}"  )

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          file: Dockerfile.prod
          context: .
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:latest

      # - name: Deploy to AWS Lambda
      #   uses: int128/deploy-lambda-action@v1
      #   with:
      #     function-name: web-whispers-prod-api
      #     image-uri: ${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:latest